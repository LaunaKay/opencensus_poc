// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ExceptionDetails.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Microsoft.LocalForwarder.Library.Inputs.Contracts {

  /// <summary>Holder for reflection information generated from ExceptionDetails.proto</summary>
  public static partial class ExceptionDetailsReflection {

    #region Descriptor
    /// <summary>File descriptor for ExceptionDetails.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExceptionDetailsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZFeGNlcHRpb25EZXRhaWxzLnByb3RvEgljb250cmFjdHMaEFN0YWNrRnJh",
            "bWUucHJvdG8aJmluY2x1ZGUvZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnBy",
            "b3RvIr8BChBFeGNlcHRpb25EZXRhaWxzEgoKAmlkGAEgASgFEg8KB291dGVy",
            "SWQYAiABKAUSEAoIdHlwZU5hbWUYAyABKAkSDwoHbWVzc2FnZRgEIAEoCRIw",
            "CgxoYXNGdWxsU3RhY2sYBSABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZh",
            "bHVlEg0KBXN0YWNrGAYgASgJEioKC3BhcnNlZFN0YWNrGAcgAygLMhUuY29u",
            "dHJhY3RzLlN0YWNrRnJhbWVCNKoCMU1pY3Jvc29mdC5Mb2NhbEZvcndhcmRl",
            "ci5MaWJyYXJ5LklucHV0cy5Db250cmFjdHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Microsoft.LocalForwarder.Library.Inputs.Contracts.StackFrameReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.LocalForwarder.Library.Inputs.Contracts.ExceptionDetails), global::Microsoft.LocalForwarder.Library.Inputs.Contracts.ExceptionDetails.Parser, new[]{ "Id", "OuterId", "TypeName", "Message", "HasFullStack", "Stack", "ParsedStack" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExceptionDetails : pb::IMessage<ExceptionDetails> {
    private static readonly pb::MessageParser<ExceptionDetails> _parser = new pb::MessageParser<ExceptionDetails>(() => new ExceptionDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExceptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.LocalForwarder.Library.Inputs.Contracts.ExceptionDetailsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExceptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExceptionDetails(ExceptionDetails other) : this() {
      id_ = other.id_;
      outerId_ = other.outerId_;
      typeName_ = other.typeName_;
      message_ = other.message_;
      hasFullStack_ = other.hasFullStack_ != null ? other.hasFullStack_.Clone() : null;
      stack_ = other.stack_;
      parsedStack_ = other.parsedStack_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExceptionDetails Clone() {
      return new ExceptionDetails(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "outerId" field.</summary>
    public const int OuterIdFieldNumber = 2;
    private int outerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OuterId {
      get { return outerId_; }
      set {
        outerId_ = value;
      }
    }

    /// <summary>Field number for the "typeName" field.</summary>
    public const int TypeNameFieldNumber = 3;
    private string typeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hasFullStack" field.</summary>
    public const int HasFullStackFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.BoolValue hasFullStack_;
    /// <summary>
    /// the default is true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.BoolValue HasFullStack {
      get { return hasFullStack_; }
      set {
        hasFullStack_ = value;
      }
    }

    /// <summary>Field number for the "stack" field.</summary>
    public const int StackFieldNumber = 6;
    private string stack_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stack {
      get { return stack_; }
      set {
        stack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parsedStack" field.</summary>
    public const int ParsedStackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Microsoft.LocalForwarder.Library.Inputs.Contracts.StackFrame> _repeated_parsedStack_codec
        = pb::FieldCodec.ForMessage(58, global::Microsoft.LocalForwarder.Library.Inputs.Contracts.StackFrame.Parser);
    private readonly pbc::RepeatedField<global::Microsoft.LocalForwarder.Library.Inputs.Contracts.StackFrame> parsedStack_ = new pbc::RepeatedField<global::Microsoft.LocalForwarder.Library.Inputs.Contracts.StackFrame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Microsoft.LocalForwarder.Library.Inputs.Contracts.StackFrame> ParsedStack {
      get { return parsedStack_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExceptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExceptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OuterId != other.OuterId) return false;
      if (TypeName != other.TypeName) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(HasFullStack, other.HasFullStack)) return false;
      if (Stack != other.Stack) return false;
      if(!parsedStack_.Equals(other.parsedStack_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OuterId != 0) hash ^= OuterId.GetHashCode();
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (hasFullStack_ != null) hash ^= HasFullStack.GetHashCode();
      if (Stack.Length != 0) hash ^= Stack.GetHashCode();
      hash ^= parsedStack_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OuterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OuterId);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TypeName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (hasFullStack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HasFullStack);
      }
      if (Stack.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Stack);
      }
      parsedStack_.WriteTo(output, _repeated_parsedStack_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (OuterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OuterId);
      }
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (hasFullStack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HasFullStack);
      }
      if (Stack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stack);
      }
      size += parsedStack_.CalculateSize(_repeated_parsedStack_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExceptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OuterId != 0) {
        OuterId = other.OuterId;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.hasFullStack_ != null) {
        if (hasFullStack_ == null) {
          hasFullStack_ = new global::Google.Protobuf.WellKnownTypes.BoolValue();
        }
        HasFullStack.MergeFrom(other.HasFullStack);
      }
      if (other.Stack.Length != 0) {
        Stack = other.Stack;
      }
      parsedStack_.Add(other.parsedStack_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OuterId = input.ReadInt32();
            break;
          }
          case 26: {
            TypeName = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 42: {
            if (hasFullStack_ == null) {
              hasFullStack_ = new global::Google.Protobuf.WellKnownTypes.BoolValue();
            }
            input.ReadMessage(hasFullStack_);
            break;
          }
          case 50: {
            Stack = input.ReadString();
            break;
          }
          case 58: {
            parsedStack_.AddEntriesFrom(input, _repeated_parsedStack_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
